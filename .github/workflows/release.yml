name: Build and Release AAB

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name (e.g., 1.0.0)'
        required: false
        type: string
      version_code:
        description: 'Version code (integer)'
        required: false
        type: string

jobs:
  build:
    name: Build AAB
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for version management
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Set version from input or tag
      run: |
        if [ "${{ github.event.inputs.version_name }}" != "" ]; then
          echo "VERSION_NAME=${{ github.event.inputs.version_name }}" >> $GITHUB_ENV
        elif [ "${{ github.ref_type }}" == "tag" ]; then
          VERSION_NAME=${GITHUB_REF#refs/tags/}
          VERSION_NAME=${VERSION_NAME#v}  # Remove 'v' prefix if present
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
        else
          echo "VERSION_NAME=1.0.0" >> $GITHUB_ENV
        fi
        
        if [ "${{ github.event.inputs.version_code }}" != "" ]; then
          echo "VERSION_CODE=${{ github.event.inputs.version_code }}" >> $GITHUB_ENV
        else
          # Use run number as version code for consistency
          echo "VERSION_CODE=${{ github.run_number }}" >> $GITHUB_ENV
        fi
    
    - name: Create local.properties
      run: |
        echo "COINGECKO_API_KEY=${{ secrets.COINGECKO_API_KEY }}" > local.properties
    
    - name: Decode keystore
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/release.keystore
        echo "KEYSTORE_FILE=release.keystore" >> $GITHUB_ENV
        echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
        echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
        echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
    
    - name: Build AAB
      run: ./gradlew bundleRelease
    
    - name: Verify AAB exists
      run: |
        if [ ! -f app/build/outputs/bundle/release/app-release.aab ]; then
          echo "Error: AAB file not found!"
          exit 1
        fi
        echo "AAB file size: $(du -h app/build/outputs/bundle/release/app-release.aab)"
    
    - name: Generate release name
      run: |
        RELEASE_NAME="CryptoTracker-v${{ env.VERSION_NAME }}-${{ env.VERSION_CODE }}"
        echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
    
    - name: Upload AAB artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.RELEASE_NAME }}-aab
        path: app/build/outputs/bundle/release/app-release.aab
        retention-days: 30
    
    - name: Upload ProGuard mapping
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.RELEASE_NAME }}-mapping
        path: app/build/outputs/mapping/release/mapping.txt
        retention-days: 90
      if: always()
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: Release ${{ env.VERSION_NAME }}
        body: |
          ## ðŸš€ Release ${{ env.VERSION_NAME }}
          
          ### ðŸ“± App Information
          - **Version Name**: ${{ env.VERSION_NAME }}
          - **Version Code**: ${{ env.VERSION_CODE }}
          - **Build Date**: ${{ steps.date.outputs.date }}
          
          ### ðŸ“¦ Downloads
          - **AAB File**: Download from artifacts below
          - **ProGuard Mapping**: Available in artifacts for crash analysis
          
          ### ðŸ”§ Build Information
          - **Target SDK**: 34 (Android 14)
          - **Min SDK**: 26 (Android 8.0)
          - **Build Type**: Release (Optimized)
          
          ### ðŸ“‹ Installation Instructions
          1. Download the AAB file from the artifacts
          2. Upload to Google Play Console
          3. Follow Google Play Store review process
          
          ---
          *This release was automatically built and signed using GitHub Actions*
        files: |
          app/build/outputs/bundle/release/app-release.aab
          app/build/outputs/mapping/release/mapping.txt
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Clean up keystore
      if: always()
      run: |
        rm -f app/release.keystore
        rm -f local.properties
    
    - name: Build summary
      run: |
        echo "## ðŸŽ‰ Build Completed Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“Š Build Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Name**: ${{ env.VERSION_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Code**: ${{ env.VERSION_CODE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Name**: ${{ env.RELEASE_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **AAB Size**: $(du -h app/build/outputs/bundle/release/app-release.aab | cut -f1)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“¦ Artifacts Generated" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… AAB file for Google Play Store" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… ProGuard mapping file for crash analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸš€ Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the AAB file from the artifacts" >> $GITHUB_STEP_SUMMARY
        echo "2. Upload to Google Play Console" >> $GITHUB_STEP_SUMMARY
        echo "3. Complete the store listing and submit for review" >> $GITHUB_STEP_SUMMARY